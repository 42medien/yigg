<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class SponsoringPlace extends BaseSponsoringPlace
{
  /**
   * The number of current valid sponsorings for this place.
   *
   * @var Int
   */
  private $sponsoringsCount = null;

  /**
   * Returns the link for this sponsoringplace.
   *
   * @return unknown
   */
  public function getLink()
  {
    return $this->intern_url;
  }

  /**
   * Return an order link for this sponsoring place.
   *
   * @return String
   */
  public function getOrderLink()
  {
    return '@sponsoring_order?id=' . $this->id;
  }

  /**
   * Returns an invitation link for this sponsoring place.
   *
   * @return unknown
   */
  public function getInviteLink()
  {
    return '@sponsoring_invite?id=' . $this->id;
  }

  /**
   * Returns the absolute URL for a Preview link.
   *
   * @param File $image the image object
   * @param String $url
   * @return String
   */
  public function getPreviewLink( $image, $url)
  {
    return sfContext::getInstance()->getController()->genUrl( $this->intern_url, true) . '?sponsoring_place='. $this->id .'&sponsoring_url=' . $url . '&sponsoring_image=' . $image->id . '#sponsoring' . $this->id;
  }

  /**
   * return the string represenation of this sponsoring place
   *
   * @return String
   */
  public function __toString()
  {
    return $this->description . " (" . $this->width . "x" . $this->height . "px)";
  }

  /**
   * Check to see if there are any places avaliable for this place
   *
   * @return boolean
   */
  public function isAvailable()
  {
    return $this->placesLeft() > 0 ? true : false;
  }

  /**
   * Returns the amount of places left for this sponsoring place.
   *
   * @return int
   */
  public function placesLeft()
  {
    // Only do one db lookup per request.
    if( null === $this->sponsoringsCount )
    {
      $this->sponsoringsCount = SponsoringTable::getSponsoringsForPlace( $this->id, $count = true);
    }
    return $this->capacity - $this->sponsoringsCount;
  }

  /**
   * Allows caching of sponsorings count if already
   * precalculated on the component
   *
   * @param int $places
   */
  public function setPlacesCount( $places )
  {
    $this->sponsoringsCount = (int) $places;
  }

  /**
   * Retrieve the highest ID needed for javascript function updatePrice
   * @todo could be much faster.
   * @todo ... not workgin ;)
   */
  public static function getLastId()
  {
    $places = Doctrine::getTable('SponsoringPlace')->findAll();
    $array = $places->toArray();
    $place = end($array);
    return $place['id'];
  }
}

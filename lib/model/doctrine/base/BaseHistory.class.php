<?php

/**
 * BaseHistory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $story_id
 * @property integer $user_id
 * @property timestamp $created_at
 * @property Story $Story
 * @property User $User
 * 
 * @method integer   getId()         Returns the current record's "id" value
 * @method integer   getStoryId()    Returns the current record's "story_id" value
 * @method integer   getUserId()     Returns the current record's "user_id" value
 * @method timestamp getCreatedAt()  Returns the current record's "created_at" value
 * @method Story     getStory()      Returns the current record's "Story" value
 * @method User      getUser()       Returns the current record's "User" value
 * @method History   setId()         Sets the current record's "id" value
 * @method History   setStoryId()    Sets the current record's "story_id" value
 * @method History   setUserId()     Sets the current record's "user_id" value
 * @method History   setCreatedAt()  Sets the current record's "created_at" value
 * @method History   setStory()      Sets the current record's "Story" value
 * @method History   setUser()       Sets the current record's "User" value
 * 
 * @package    yigg
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHistory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('history');
        $this->hasColumn('id', 'integer', 11, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('story_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('user_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => 25,
             ));


        $this->index('history_created_at', array(
             'fields' => 'created_at',
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Story', array(
             'local' => 'story_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $yiggnotifcation0 = new yiggNotifcation();
        $this->actAs($yiggnotifcation0);
    }
}
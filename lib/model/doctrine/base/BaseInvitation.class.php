<?php

/**
 * BaseInvitation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property integer $place_id
 * @property string $name
 * @property string $email
 * @property string $subject
 * @property string $message
 * @property string $token
 * @property User $User
 * @property SponsoringPlace $SponsoringPlace
 * 
 * @method integer         getId()              Returns the current record's "id" value
 * @method integer         getUserId()          Returns the current record's "user_id" value
 * @method integer         getPlaceId()         Returns the current record's "place_id" value
 * @method string          getName()            Returns the current record's "name" value
 * @method string          getEmail()           Returns the current record's "email" value
 * @method string          getSubject()         Returns the current record's "subject" value
 * @method string          getMessage()         Returns the current record's "message" value
 * @method string          getToken()           Returns the current record's "token" value
 * @method User            getUser()            Returns the current record's "User" value
 * @method SponsoringPlace getSponsoringPlace() Returns the current record's "SponsoringPlace" value
 * @method Invitation      setId()              Sets the current record's "id" value
 * @method Invitation      setUserId()          Sets the current record's "user_id" value
 * @method Invitation      setPlaceId()         Sets the current record's "place_id" value
 * @method Invitation      setName()            Sets the current record's "name" value
 * @method Invitation      setEmail()           Sets the current record's "email" value
 * @method Invitation      setSubject()         Sets the current record's "subject" value
 * @method Invitation      setMessage()         Sets the current record's "message" value
 * @method Invitation      setToken()           Sets the current record's "token" value
 * @method Invitation      setUser()            Sets the current record's "User" value
 * @method Invitation      setSponsoringPlace() Sets the current record's "SponsoringPlace" value
 * 
 * @package    yigg
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseInvitation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('invitation');
        $this->hasColumn('id', 'integer', 11, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('user_id', 'integer', 11, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 11,
             ));
        $this->hasColumn('place_id', 'integer', 11, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 11,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'email' => true,
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('subject', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('message', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('SponsoringPlace', array(
             'local' => 'place_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}
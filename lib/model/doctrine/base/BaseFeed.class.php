<?php

/**
 * BaseFeed
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $url
 * @property float $load_time
 * @property integer $change_frequency
 * @property timestamp $last_updated
 * @property string $error
 * @property boolean $autoimport
 * @property integer $last_imported
 * @property integer $user_id
 * @property User $User
 * @property Doctrine_Collection $Entry
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method string              getUrl()              Returns the current record's "url" value
 * @method float               getLoadTime()         Returns the current record's "load_time" value
 * @method integer             getChangeFrequency()  Returns the current record's "change_frequency" value
 * @method timestamp           getLastUpdated()      Returns the current record's "last_updated" value
 * @method string              getError()            Returns the current record's "error" value
 * @method boolean             getAutoimport()       Returns the current record's "autoimport" value
 * @method integer             getLastImported()     Returns the current record's "last_imported" value
 * @method integer             getUserId()           Returns the current record's "user_id" value
 * @method User                getUser()             Returns the current record's "User" value
 * @method Doctrine_Collection getEntry()            Returns the current record's "Entry" collection
 * @method Feed                setId()               Sets the current record's "id" value
 * @method Feed                setUrl()              Sets the current record's "url" value
 * @method Feed                setLoadTime()         Sets the current record's "load_time" value
 * @method Feed                setChangeFrequency()  Sets the current record's "change_frequency" value
 * @method Feed                setLastUpdated()      Sets the current record's "last_updated" value
 * @method Feed                setError()            Sets the current record's "error" value
 * @method Feed                setAutoimport()       Sets the current record's "autoimport" value
 * @method Feed                setLastImported()     Sets the current record's "last_imported" value
 * @method Feed                setUserId()           Sets the current record's "user_id" value
 * @method Feed                setUser()             Sets the current record's "User" value
 * @method Feed                setEntry()            Sets the current record's "Entry" collection
 * 
 * @package    yigg
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFeed extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('feed');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             ));
        $this->hasColumn('url', 'string', 512, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 512,
             ));
        $this->hasColumn('load_time', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('change_frequency', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('last_updated', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => 25,
             ));
        $this->hasColumn('error', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('autoimport', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('last_imported', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('FeedEntry as Entry', array(
             'local' => 'id',
             'foreign' => 'feed_id',
             'cascade' => array(
             0 => 'delete',
             )));
    }
}
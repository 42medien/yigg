<?php

/**
 * BaseRating
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $ip_address
 * @property string $user_agent
 * @property timestamp $created_at
 * @property float $epoch_time
 * @property StoryRating $StoryRating
 * @property Doctrine_Collection $Story
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getIpAddress()   Returns the current record's "ip_address" value
 * @method string              getUserAgent()   Returns the current record's "user_agent" value
 * @method timestamp           getCreatedAt()   Returns the current record's "created_at" value
 * @method float               getEpochTime()   Returns the current record's "epoch_time" value
 * @method StoryRating         getStoryRating() Returns the current record's "StoryRating" value
 * @method Doctrine_Collection getStory()       Returns the current record's "Story" collection
 * @method Rating              setId()          Sets the current record's "id" value
 * @method Rating              setIpAddress()   Sets the current record's "ip_address" value
 * @method Rating              setUserAgent()   Sets the current record's "user_agent" value
 * @method Rating              setCreatedAt()   Sets the current record's "created_at" value
 * @method Rating              setEpochTime()   Sets the current record's "epoch_time" value
 * @method Rating              setStoryRating() Sets the current record's "StoryRating" value
 * @method Rating              setStory()       Sets the current record's "Story" collection
 * 
 * @package    yigg
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRating extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('rating');
        $this->hasColumn('id', 'integer', 11, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('ip_address', 'string', 15, array(
             'type' => 'string',
             'length' => 15,
             ));
        $this->hasColumn('user_agent', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'notnull' => true,
             'type' => 'timestamp',
             'length' => 25,
             ));
        $this->hasColumn('epoch_time', 'float', null, array(
             'notnull' => true,
             'type' => 'float',
             ));


        $this->index('rating_created_at', array(
             'fields' => 'created_at',
             ));
        $this->index('rating_epoch_time', array(
             'fields' => 'epoch_time',
             'sorting' => 'DESC',
             ));
        $this->index('rating_ipaddress', array(
             'fields' => 'ip_address',
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('StoryRating', array(
             'local' => 'id',
             'foreign' => 'rating_id'));

        $this->hasMany('Story', array(
             'refClass' => 'StoryRating',
             'local' => 'rating_id',
             'foreign' => 'story_id'));

        $yiggepoch0 = new yiggEpoch();
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'updated' => 
             array(
              'disabled' => true,
             ),
             'created' => 
             array(
              'name' => 'created_at',
              'type' => 'timestamp',
             ),
             ));
        $this->actAs($yiggepoch0);
        $this->actAs($timestampable0);
    }
}
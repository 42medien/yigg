<?php

/**
 * BaseTaskStatus
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $description
 * @property string $task_name
 * @property boolean $is_locked
 * @property timestamp $last_run
 * @property string $configuration
 * 
 * @method integer    getId()            Returns the current record's "id" value
 * @method string     getDescription()   Returns the current record's "description" value
 * @method string     getTaskName()      Returns the current record's "task_name" value
 * @method boolean    getIsLocked()      Returns the current record's "is_locked" value
 * @method timestamp  getLastRun()       Returns the current record's "last_run" value
 * @method string     getConfiguration() Returns the current record's "configuration" value
 * @method TaskStatus setId()            Sets the current record's "id" value
 * @method TaskStatus setDescription()   Sets the current record's "description" value
 * @method TaskStatus setTaskName()      Sets the current record's "task_name" value
 * @method TaskStatus setIsLocked()      Sets the current record's "is_locked" value
 * @method TaskStatus setLastRun()       Sets the current record's "last_run" value
 * @method TaskStatus setConfiguration() Sets the current record's "configuration" value
 * 
 * @package    yigg
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTaskStatus extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('task_status');
        $this->hasColumn('id', 'integer', 11, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('description', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('task_name', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('is_locked', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('last_run', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => 25,
             ));
        $this->hasColumn('status as configuration', 'string', 100000, array(
             'type' => 'string',
             'length' => 100000,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $yiggconfigurable0 = new yiggConfigurable(array(
             ));
        $this->actAs($yiggconfigurable0);
    }
}
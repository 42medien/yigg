<?php

/**
 * BaseAuthUserKey
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $user_key
 * @property timestamp $created_at
 * @property User $User
 * 
 * @method integer     getId()         Returns the current record's "id" value
 * @method integer     getUserId()     Returns the current record's "user_id" value
 * @method string      getUserKey()    Returns the current record's "user_key" value
 * @method timestamp   getCreatedAt()  Returns the current record's "created_at" value
 * @method User        getUser()       Returns the current record's "User" value
 * @method AuthUserKey setId()         Sets the current record's "id" value
 * @method AuthUserKey setUserId()     Sets the current record's "user_id" value
 * @method AuthUserKey setUserKey()    Sets the current record's "user_key" value
 * @method AuthUserKey setCreatedAt()  Sets the current record's "created_at" value
 * @method AuthUserKey setUser()       Sets the current record's "User" value
 * 
 * @package    yigg
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAuthUserKey extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('auth_user_key');
        $this->hasColumn('id', 'integer', 11, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('user_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('user_key', 'string', 32, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 32,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => 25,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}
<?php

/**
 * BaseStoryTweet
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $story_id
 * @property integer $tweet_id
 * @property Story $Story
 * @property Tweet $Tweet
 * 
 * @method integer    getId()       Returns the current record's "id" value
 * @method integer    getStoryId()  Returns the current record's "story_id" value
 * @method integer    getTweetId()  Returns the current record's "tweet_id" value
 * @method Story      getStory()    Returns the current record's "Story" value
 * @method Tweet      getTweet()    Returns the current record's "Tweet" value
 * @method StoryTweet setId()       Sets the current record's "id" value
 * @method StoryTweet setStoryId()  Sets the current record's "story_id" value
 * @method StoryTweet setTweetId()  Sets the current record's "tweet_id" value
 * @method StoryTweet setStory()    Sets the current record's "Story" value
 * @method StoryTweet setTweet()    Sets the current record's "Tweet" value
 * 
 * @package    yigg
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStoryTweet extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('story_tweet');
        $this->hasColumn('id', 'integer', 11, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('story_id', 'integer', 11, array(
             'notnull' => true,
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('tweet_id', 'integer', 11, array(
             'notnull' => true,
             'type' => 'integer',
             'length' => 11,
             ));


        $this->index('epoch_time', array(
             'fields' => 'epoch_time',
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Story', array(
             'local' => 'story_id',
             'foreign' => 'id'));

        $this->hasOne('Tweet', array(
             'local' => 'tweet_id',
             'foreign' => 'id'));

        $yiggepoch0 = new yiggEpoch(array(
             ));
        $this->actAs($yiggepoch0);
    }
}
<?php

/**
 * BaseTweet
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $twitter_id
 * @property string $text
 * @property string $source
 * @property string $username
 * @property string $website_url
 * @property string $profile_image_url
 * @property Doctrine_Collection $Story
 * @property Doctrine_Collection $StoryTweet
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getTwitterId()         Returns the current record's "twitter_id" value
 * @method string              getText()              Returns the current record's "text" value
 * @method string              getSource()            Returns the current record's "source" value
 * @method string              getUsername()          Returns the current record's "username" value
 * @method string              getWebsiteUrl()        Returns the current record's "website_url" value
 * @method string              getProfileImageUrl()   Returns the current record's "profile_image_url" value
 * @method Doctrine_Collection getStory()             Returns the current record's "Story" collection
 * @method Doctrine_Collection getStoryTweet()        Returns the current record's "StoryTweet" collection
 * @method Tweet               setId()                Sets the current record's "id" value
 * @method Tweet               setTwitterId()         Sets the current record's "twitter_id" value
 * @method Tweet               setText()              Sets the current record's "text" value
 * @method Tweet               setSource()            Sets the current record's "source" value
 * @method Tweet               setUsername()          Sets the current record's "username" value
 * @method Tweet               setWebsiteUrl()        Sets the current record's "website_url" value
 * @method Tweet               setProfileImageUrl()   Sets the current record's "profile_image_url" value
 * @method Tweet               setStory()             Sets the current record's "Story" collection
 * @method Tweet               setStoryTweet()        Sets the current record's "StoryTweet" collection
 * 
 * @package    yigg
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTweet extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tweet');
        $this->hasColumn('id', 'integer', 11, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('twitter_id', 'integer', 11, array(
             'notnull' => true,
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('text', 'string', 150, array(
             'notnull' => true,
             'type' => 'string',
             'length' => 150,
             ));
        $this->hasColumn('source', 'string', 150, array(
             'notnull' => false,
             'type' => 'string',
             'length' => 150,
             ));
        $this->hasColumn('username', 'string', 150, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 150,
             ));
        $this->hasColumn('website_url', 'string', 150, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 150,
             ));
        $this->hasColumn('profile_image_url', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));


        $this->index('comment_created_at', array(
             'fields' => 'created_at',
             ));
        $this->index('twitter_id', array(
             'fields' => 'twitter_id',
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Story', array(
             'refClass' => 'StoryTweet',
             'local' => 'tweet_id',
             'foreign' => 'story_id'));

        $this->hasMany('StoryTweet', array(
             'local' => 'id',
             'foreign' => 'tweet_id'));

        $yiggsoftdelete0 = new yiggSoftDelete(array(
             ));
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($yiggsoftdelete0);
        $this->actAs($timestampable0);
    }
}
<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class DealTable extends Doctrine_Table
{
  /**
   * Returns all the deals that this user has.
   *
   * @param Int $user_id
   * @return Doctrine_Collection
   */
  public static function getAllForUser($user_id)
  {
    $query = Doctrine_Query::create();

    $query->select('d.*')
          ->from('Deal d')
          ->where('d.user_id = ? AND
                   d.payed = ? AND
                   d.sponsoring_id IS NOT NULL',
                  array($user_id, true))
          ->orderBy("created_at DESC");
    return $query->execute();
  }

  /**
   * Returns all deals that have been completed by a user successfully
   */
  public static function getDealsOfUser($user_id)
  {
    $query = Doctrine_Query::create();
    $query->select('d.*')
          ->from('Deal d')
          ->where('d.user_id = ? AND d.payed = ? AND d.credit > 0', array($user_id, false));
    return $query->execute();
  }

  /**
   * Retrieve all payments where a user was inviter and got credit
   *
   * @return Doctrine_Collection
   */
  public static function getUserCredit($user)
  {
    $query = Doctrine_Query::create();

    $query->select('d.*')
          ->from('Deal d')
          ->where('d.user_id = ? AND
                   d.payed = ? AND
                   d.credit > 0',
                  array($user->id, false));

    $credits = $query->execute();

    $amount = 0;
    foreach($credits as $credit)
    {
      $amount += $credit->credit;
    }

    $payed = self::getPayedCredits($user);
    foreach($payed as $p)
    {
      $amount -= $p->debit;
    }

    return $amount;
  }

  /**
   * Retrieve all payments have been given to a user
   *
   * @return Doctrine_Collection
   */
  public static function getPayedCredits($user)
  {
    $query = Doctrine_Query::create();

    $query->select('d.*')
          ->from('Deal d')
          ->where('d.user_id = ? AND
                   d.payed = ? AND
                   d.sponsoring_id IS NULL',
                  array($user->id, true)
                 );
    return $query->execute();
  }
}
